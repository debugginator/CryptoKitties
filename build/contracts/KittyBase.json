{
  "contractName": "KittyBase",
  "abi": [],
  "bytecode": "0x6080604052348015600f57600080fd5b50603580601d6000396000f3fe6080604052600080fdfea165627a7a72305820460fbb6153b80f06f9146e2104661a5f03032dcb9e7ef499342200b848040cc90029",
  "deployedBytecode": "0x6080604052600080fdfea165627a7a72305820460fbb6153b80f06f9146e2104661a5f03032dcb9e7ef499342200b848040cc90029",
  "sourceMap": "25:1240:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25:1240:0;;;;;;;",
  "deployedSourceMap": "25:1240:0:-;;;;;",
  "source": "pragma solidity ^0.5.0;\n\ncontract KittyBase {\n\t\n\t// struct Kitty {\n\t// \tuint256 geneticCode; // ili string kako smo pricali\n\t// \tuint32 parent1_id;\n\t// \tuint32 parent2_id;\n\t// \tuint32 id;\n\t// \tuint16 generation;\n\t// \tuint64 birthTime;\n\t// }\n\n\t// function createKitty(\n\t// \tuint256 _geneticCode,\n\t// \tuint32 _parent1_id,\n\t// \tuint32 _parent2_id,\n\t// \tuint32 _id,\n\t// \tuint16 _generation) \n\t// \tpublic\n\t// \treturns (uint)\n\t// {\n\t// \tKitty memory _kitty = Kitty({\n\t// \t\tgeneticCode: _geneticCode,\n\t// \t\tparent1_id: _parent1_id,\n\t// \t\tparent2_id: _parent2_id,\n\t// \t\tid: _id,\n\t// \t\tgeneration: _generation,\n\t// \t\tbirthTime: uint64(now)\n\t// \t});\n\t// \tkitties.push(_kitty);\n\t// \t// todo Birth event\n\t// \t// todo assign ownership\n\t// }\n\n\t// function getKittyById(uint32 _id)\n\t// \tview\n\t// \tpublic\n\t// \treturns (\n\t// \tuint256 geneticCode,\n\t// \tuint32 parent1_id,\n\t// \tuint32 parent2_id,\n\t// \tuint32 id,\n\t// \tuint16 generation)\n\t// {\n\t// \treturn (kitties[_id].geneticCode,\n\t// \t\t\tkitties[_id].parent1_id,\n\t// \t\t\tkitties[_id].parent2_id,\n\t// \t\t\tkitties[_id].id,\n\t// \t\t\tkitties[_id].generation);\n\t// }\n\n\t// /// @dev An array containing the Kitty struct for all Kitties in existence. The ID\n //    ///  of each cat is actually an index into this array.\n //    Kitty[] kitties;\n}",
  "sourcePath": "/home/pago/Documents/Faks/RASSUS/CryptoKitties/contracts/KittyBase.sol",
  "ast": {
    "absolutePath": "/home/pago/Documents/Faks/RASSUS/CryptoKitties/contracts/KittyBase.sol",
    "exportedSymbols": {
      "KittyBase": [
        2
      ]
    },
    "id": 3,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2,
        "linearizedBaseContracts": [
          2
        ],
        "name": "KittyBase",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 3,
        "src": "25:1240:0"
      }
    ],
    "src": "0:1265:0"
  },
  "legacyAST": {
    "absolutePath": "/home/pago/Documents/Faks/RASSUS/CryptoKitties/contracts/KittyBase.sol",
    "exportedSymbols": {
      "KittyBase": [
        2
      ]
    },
    "id": 3,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2,
        "linearizedBaseContracts": [
          2
        ],
        "name": "KittyBase",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 3,
        "src": "25:1240:0"
      }
    ],
    "src": "0:1265:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-01-10T14:02:49.439Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}